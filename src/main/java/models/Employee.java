package models;

import javax.persistence.*;
import java.util.List;

// // Use following annotation if I want an employee table to be auto-generated by Hibernate:
//@Entity
//@Inheritance(strategy = InheritanceType.JOINED)
// // Use the following annotation if I don't want a separate employee table generated by Hibernate,
// // but just want the employee properties to be included as columns in my sub-type tables,
// // which is slightly more efficient for most queries I may want to do:
@MappedSuperclass
public abstract class Employee {

    private int id;
    private String firstName;
    private String lastName;
    private int fee;
    private double wages;

    public Employee() {
    }

    public Employee(String firstName, String lastName, int fee) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.fee = fee;
        this.wages = 0.00;
    }

    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id")
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name="first_name")
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name="last_name")
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name="fee")
    public int getFee() {
        return fee;
    }

    public void setFee(int fee) {
        this.fee = fee;
    }

    @Column(name="wages")
    public double getWages() {
        return wages;
    }

    public void setWages(double wages) {
        this.wages += wages;
    }
}
